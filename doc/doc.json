[
    {
        "defines": [
            {
                "extends": {
                    "finish": 210010,
                    "start": 210009,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/scene/Scene_UI.lua",
                "finish": 210006,
                "start": 210001,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 840010,
                    "start": 840009,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/scene/Scene_UI_old.lua",
                "finish": 840006,
                "start": 840001,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 290010,
                    "start": 290009,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/Hud.lua",
                "finish": 290006,
                "start": 290001,
                "type": "setglobal"
            }
        ],
        "name": "ALPHA",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840017,
                            "name": "x1",
                            "start": 840015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 840021,
                            "name": "y1",
                            "start": 840019,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 840025,
                            "name": "x2",
                            "start": 840023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 840029,
                            "name": "y2",
                            "start": 840027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 860003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function ANGLE(x1: any, y1: any, x2: any, y2: any)\n  -> number"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 840014,
                "start": 840009,
                "type": "setglobal"
            }
        ],
        "name": "ANGLE",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 720038,
                    "start": 720007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 720004,
                "start": 720000,
                "type": "setglobal"
            }
        ],
        "name": "Alan",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 760045,
                    "start": 760012,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 760009,
                "start": 760000,
                "type": "setglobal"
            }
        ],
        "name": "Animation",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 800048,
                    "start": 800012,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 800009,
                "start": 800000,
                "type": "setglobal"
            }
        ],
        "name": "BlueThing",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 740042,
                    "start": 740009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 740006,
                "start": 740000,
                "type": "setglobal"
            }
        ],
        "name": "BonBon",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 690040,
                    "start": 690011,
                    "type": "select",
                    "view": "table"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 690008,
                "start": 690000,
                "type": "setglobal"
            }
        ],
        "name": "Boosters",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 650036,
                    "start": 650009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 650006,
                "start": 650000,
                "type": "setglobal"
            }
        ],
        "name": "Bullet",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 660044,
                    "start": 660013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 660010,
                "start": 660000,
                "type": "setglobal"
            }
        ],
        "name": "Bullet_Dot",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1450024,
                    "start": 1450021,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1450008,
                "start": 1450000,
                "type": "setglobal"
            }
        ],
        "name": "CANVAS_X",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1450027,
                    "start": 1450026,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1450018,
                "start": 1450010,
                "type": "setglobal"
            }
        ],
        "name": "CANVAS_Y",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 650027,
                            "name": "x1",
                            "start": 650025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650031,
                            "name": "y1",
                            "start": 650029,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650035,
                            "name": "w1",
                            "start": 650033,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650039,
                            "name": "h1",
                            "start": 650037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650043,
                            "name": "x2",
                            "start": 650041,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650047,
                            "name": "y2",
                            "start": 650045,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650051,
                            "name": "w2",
                            "start": 650049,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 650055,
                            "name": "h2",
                            "start": 650053,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 700003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 650000,
                    "type": "function",
                    "view": "function CHECK_COLLISION(x1: any, y1: any, w1: any, h1: any, x2: any, y2: any, w2: any, h2: any)\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 650024,
                "start": 650009,
                "type": "setglobal"
            }
        ],
        "name": "CHECK_COLLISION",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 610057,
                    "start": 610018,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 610015,
                "start": 610000,
                "type": "setglobal"
            }
        ],
        "name": "Callbackmanager",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 810044,
                    "start": 810010,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 810007,
                "start": 810000,
                "type": "setglobal"
            }
        ],
        "name": "Clapper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 800016,
                            "name": "x1",
                            "start": 800014,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 800020,
                            "name": "y1",
                            "start": 800018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 800024,
                            "name": "x2",
                            "start": 800022,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 800028,
                            "name": "y2",
                            "start": 800026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 820003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 800000,
                    "type": "function",
                    "view": "function DIST(x1: any, y1: any, x2: any, y2: any)\n  -> number"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 800013,
                "start": 800009,
                "type": "setglobal"
            }
        ],
        "name": "DIST",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 710040,
                    "start": 710008,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 710005,
                "start": 710000,
                "type": "setglobal"
            }
        ],
        "name": "Enemy",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 630042,
                    "start": 630012,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 630009,
                "start": 630000,
                "type": "setglobal"
            }
        ],
        "name": "Explosion",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 540088,
                    "start": 540007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 540004,
                "start": 540000,
                "type": "setglobal"
            }
        ],
        "name": "FONT",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740018,
                            "name": "t",
                            "start": 740017,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 740021,
                            "name": "f",
                            "start": 740020,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 740026,
                            "start": 740023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "finish": 780003,
                    "start": 740000,
                    "type": "function",
                    "view": "function FOREACH(t: any, f: any, ...any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 740016,
                "start": 740009,
                "type": "setglobal"
            }
        ],
        "name": "FOREACH",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 80015,
                            "name": "id",
                            "start": 80013,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 100003,
                    "start": 80000,
                    "type": "function",
                    "view": "function GET(id: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 80012,
                "start": 80009,
                "type": "setglobal"
            }
        ],
        "name": "GET",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 620044,
                    "start": 620013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 620010,
                "start": 620000,
                "type": "setglobal"
            }
        ],
        "name": "GameObject",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 70039,
                    "start": 70009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 70006,
                "start": 70000,
                "type": "setglobal"
            }
        ],
        "name": "Global",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 770034,
                    "start": 770008,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 770005,
                "start": 770000,
                "type": "setglobal"
            }
        ],
        "name": "Grace",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 790050,
                    "start": 790013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 790010,
                "start": 790000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 820050,
                    "start": 820013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 820010,
                "start": 820000,
                "type": "setglobal"
            }
        ],
        "name": "GreenCount",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 640030,
                    "start": 640006,
                    "type": "select",
                    "view": "table"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 640003,
                "start": 640000,
                "type": "setglobal"
            }
        ],
        "name": "Gun",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 900033,
                    "start": 900013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 900010,
                "start": 900000,
                "type": "setglobal"
            }
        ],
        "name": "Hyperdrift",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 50003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 30000,
                    "type": "function",
                    "view": "function ID()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/Conductor.lua",
                "finish": 30011,
                "start": 30009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 120030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 120000,
                    "type": "function",
                    "view": "function ID()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/Map.lua",
                "finish": 120011,
                "start": 120009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 50003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 30000,
                    "type": "function",
                    "view": "function ID()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome.lua",
                "finish": 30011,
                "start": 30009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 50003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 30000,
                    "type": "function",
                    "view": "function ID()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome2.lua",
                "finish": 30011,
                "start": 30009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 50003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 30000,
                    "type": "function",
                    "view": "function ID()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome3.lua",
                "finish": 30011,
                "start": 30009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 720017,
                    "start": 720000,
                    "type": "function",
                    "view": "function ID()"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 720011,
                "start": 720009,
                "type": "setglobal"
            }
        ],
        "name": "ID",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 30098,
                    "start": 30010,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/item/Metal.lua",
                "finish": 30007,
                "start": 30000,
                "type": "setglobal"
            }
        ],
        "name": "IMAGE_1",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 30102,
                    "start": 30014,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/gameobject/loot/Metal.lua",
                "finish": 30011,
                "start": 30000,
                "type": "setglobal"
            }
        ],
        "name": "IMG_METAL_1",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 40102,
                    "start": 40014,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/gameobject/loot/Metal.lua",
                "finish": 40011,
                "start": 40000,
                "type": "setglobal"
            }
        ],
        "name": "IMG_METAL_2",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 40087,
                    "start": 30015,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/gameobject/Powerup_Shield.lua",
                "finish": 30012,
                "start": 30000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 40069,
                    "start": 30015,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/gameobject/loot/Loot.lua",
                "finish": 30012,
                "start": 30000,
                "type": "setglobal"
            }
        ],
        "name": "IMG_POWERUPS",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 600035,
                    "start": 600007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 600004,
                "start": 600000,
                "type": "setglobal"
            }
        ],
        "name": "Jobs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 730038,
                    "start": 730007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 730004,
                "start": 730000,
                "type": "setglobal"
            }
        ],
        "name": "Lips",
        "type": "variable"
    },
    {
        "defines": [],
        "fields": [],
        "name": "LuaLS",
        "type": "luals.config"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 120016,
                            "start": 120013,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "finish": 270003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table|unknown"
                        }
                    ],
                    "start": 120000,
                    "type": "function",
                    "view": "function NEW(...any)\n  -> table|unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 120012,
                "start": 120009,
                "type": "setglobal"
            }
        ],
        "name": "NEW",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570015,
                            "name": "a",
                            "start": 570014,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 570018,
                            "name": "b",
                            "start": 570017,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 630003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function NORM(a: any, b: any)\n  -> number"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 570013,
                "start": 570009,
                "type": "setglobal"
            }
        ],
        "name": "NORM",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 830038,
                    "start": 830007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 830004,
                "start": 830000,
                "type": "setglobal"
            }
        ],
        "name": "Octo",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 840046,
                    "start": 840011,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 840008,
                "start": 840000,
                "type": "setglobal"
            }
        ],
        "name": "Parasite",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 780036,
                    "start": 780009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 780006,
                "start": 780000,
                "type": "setglobal"
            }
        ],
        "name": "Planet",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 700036,
                    "start": 700009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 700006,
                "start": 700000,
                "type": "setglobal"
            }
        ],
        "name": "Player",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 750052,
                    "start": 750017,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 750014,
                "start": 750000,
                "type": "setglobal"
            }
        ],
        "name": "Powerup_Shield",
        "type": "variable"
    },
    {
        "defines": [
            {
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 19,
                "start": 10,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 40029,
                    "start": 40020,
                    "type": "getlocal",
                    "view": "Prototype"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 40017,
                "name": "__index",
                "start": 40000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "desc": "Creates a clone with self as metatable.",
                "extends": {
                    "args": [
                        {
                            "finish": 90008,
                            "name": "self",
                            "start": 90008,
                            "type": "self",
                            "view": "Prototype"
                        },
                        {
                            "finish": 90029,
                            "name": "name",
                            "start": 90025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Creates a clone with self as metatable.",
                    "finish": 200003,
                    "rawdesc": "Creates a clone with self as metatable.",
                    "returns": [
                        {
                            "name": "newInstance",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 90000,
                    "type": "function",
                    "view": "(method) Prototype:clone(name: string)\n  -> newInstance: table"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 90024,
                "name": "clone",
                "rawdesc": "Creates a clone with self as metatable.",
                "start": 90009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "desc": "Initializes self as Prototype.",
                "extends": {
                    "args": [
                        {
                            "finish": 360008,
                            "name": "self",
                            "start": 360008,
                            "type": "self",
                            "view": "Prototype"
                        },
                        {
                            "finish": 360027,
                            "start": 360024,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "Initializes self as Prototype.",
                    "finish": 380003,
                    "rawdesc": "Initializes self as Prototype.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "Prototype"
                        }
                    ],
                    "start": 360000,
                    "type": "function",
                    "view": "(method) Prototype:init(...any)\n  -> Prototype"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 360023,
                "name": "init",
                "rawdesc": "Initializes self as Prototype.",
                "start": 360009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "desc": "Prototype inheritance can be checked by is<TypeName>",
                "extends": {
                    "finish": 20020,
                    "start": 20013,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 20020,
                            "start": 20013,
                            "type": "doc.type.name",
                            "view": "boolean"
                        }
                    ],
                    "view": "boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 20020,
                "name": "is",
                "rawdesc": "Prototype inheritance can be checked by is<TypeName>",
                "start": 20010,
                "type": "doc.field",
                "visible": "public"
            },
            {
                "desc": "Helper function that takes care of cloning and initializing",
                "extends": {
                    "args": [
                        {
                            "finish": 430008,
                            "name": "self",
                            "start": 430008,
                            "type": "self",
                            "view": "Prototype"
                        },
                        {
                            "finish": 430026,
                            "start": 430023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "Helper function that takes care of cloning and initializing",
                    "finish": 450003,
                    "rawdesc": "Helper function that takes care of cloning and initializing",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "(method) Prototype:new(...unknown)\n  -> unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 430022,
                "name": "new",
                "rawdesc": "Helper function that takes care of cloning and initializing",
                "start": 430009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "desc": "Returns the parent of the Prototype. The parent is usually the metatable.",
                "extends": {
                    "args": [
                        {
                            "finish": 300008,
                            "name": "self",
                            "start": 300008,
                            "type": "self",
                            "view": "Prototype"
                        }
                    ],
                    "desc": "Returns the parent of the Prototype. The parent is usually the metatable.",
                    "finish": 320003,
                    "rawdesc": "Returns the parent of the Prototype. The parent is usually the metatable.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 300000,
                    "type": "function",
                    "view": "(method) Prototype:super()\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 300024,
                "name": "super",
                "rawdesc": "Returns the parent of the Prototype. The parent is usually the metatable.",
                "start": 300009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "desc": "Returns the name as if it was a type. Clones will have the same type as their parent.",
                "extends": {
                    "args": [
                        {
                            "finish": 240008,
                            "name": "self",
                            "start": 240008,
                            "type": "self",
                            "view": "Prototype"
                        }
                    ],
                    "desc": "Returns the name as if it was a type. Clones will have the same type as their parent.",
                    "finish": 260003,
                    "rawdesc": "Returns the name as if it was a type. Clones will have the same type as their parent.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 240000,
                    "type": "function",
                    "view": "(method) Prototype:type()\n  -> string"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 240023,
                "name": "type",
                "rawdesc": "Returns the name as if it was a type. Clones will have the same type as their parent.",
                "start": 240009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 10026,
                    "start": 10020,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 10026,
                            "start": 10020,
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "file:///home/baal/Code/gameJam/src/lua-additions/Prototype.lua",
                "finish": 10026,
                "name": "type_name",
                "start": 10010,
                "type": "doc.field",
                "visible": "public"
            }
        ],
        "name": "Prototype",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 580045,
                    "start": 580012,
                    "type": "select",
                    "view": "Prototype"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 580009,
                "start": 580000,
                "type": "setglobal"
            }
        ],
        "name": "Prototype",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 520018,
                            "name": "num",
                            "start": 520015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 520036,
                            "name": "numDecimalPlaces",
                            "start": 520020,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 550003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 520000,
                    "type": "function",
                    "view": "function ROUND(num: any, numDecimalPlaces: any)\n  -> unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 520014,
                "start": 520009,
                "type": "setglobal"
            }
        ],
        "name": "ROUND",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 850044,
                    "start": 850010,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 850007,
                "start": 850000,
                "type": "setglobal"
            }
        ],
        "name": "RedDude",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 860038,
                    "start": 860007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 860004,
                "start": 860000,
                "type": "setglobal"
            }
        ],
        "name": "Robo",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 120015,
                            "name": "id",
                            "start": 120013,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 120020,
                            "name": "val",
                            "start": 120017,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 140003,
                    "start": 120000,
                    "type": "function",
                    "view": "function SET(id: any, val: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 120012,
                "start": 120009,
                "type": "setglobal"
            }
        ],
        "name": "SET",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 470015,
                            "name": "x",
                            "start": 470014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 500003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 470000,
                    "type": "function",
                    "view": "function SIGN(x: any)\n  -> integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 470013,
                "start": 470009,
                "type": "setglobal"
            }
        ],
        "name": "SIGN",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "local IMG_PLANET1 = love.graphics.newImage(\"assets/gfx/planet-generator/2145899259.png\") --100x10",
                    "finish": 40010,
                    "rawdesc": "local IMG_PLANET1 = love.graphics.newImage(\"assets/gfx/planet-generator/2145899259.png\") --100x10",
                    "start": 40007,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/gameobject/Planet.lua",
                "finish": 40004,
                "start": 40000,
                "type": "setglobal"
            }
        ],
        "desc": "local IMG_PLANET1 = love.graphics.newImage(\"assets/gfx/planet-generator/2145899259.png\") --100x10",
        "name": "SIZE",
        "rawdesc": "local IMG_PLANET1 = love.graphics.newImage(\"assets/gfx/planet-generator/2145899259.png\") --100x10",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 880039,
                    "start": 880013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 880010,
                "start": 880000,
                "type": "setglobal"
            }
        ],
        "name": "Scene_Game",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 890041,
                    "start": 890014,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 890011,
                "start": 890000,
                "type": "setglobal"
            }
        ],
        "name": "Scene_Menue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 680043,
                    "start": 680015,
                    "type": "select",
                    "view": "table"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 680012,
                "start": 680000,
                "type": "setglobal"
            }
        ],
        "name": "Scenemanager",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 30021,
                            "name": "enabled",
                            "start": 30014,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 30024,
                            "name": "x",
                            "start": 30023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 30027,
                            "name": "y",
                            "start": 30026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 50003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 30000,
                    "type": "function",
                    "view": "function Slot(enabled: any, x: any, y: any)\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/Inventory.lua",
                "finish": 30013,
                "start": 30009,
                "type": "setglobal"
            }
        ],
        "name": "Slot",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 610022,
                            "name": "go_type",
                            "start": 610015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 610032,
                            "name": "quantity",
                            "start": 610024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 610035,
                            "name": "x",
                            "start": 610034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 610038,
                            "name": "y",
                            "start": 610037,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 700003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 610000,
                    "type": "function",
                    "view": "function Spawn(go_type: any, quantity: any, x: any, y: any)\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/Conductor.lua",
                "finish": 610014,
                "start": 610009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 70022,
                            "name": "go_type",
                            "start": 70015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70029,
                            "name": "after",
                            "start": 70024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70032,
                            "name": "x",
                            "start": 70031,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70035,
                            "name": "y",
                            "start": 70034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70046,
                            "name": "repeating",
                            "start": 70037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70057,
                            "name": "condition",
                            "start": 70048,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 180003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 70000,
                    "type": "function",
                    "view": "function Spawn(go_type: any, after: any, x: any, y: any, repeating: any, condition: any)\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome.lua",
                "finish": 70014,
                "start": 70009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 70022,
                            "name": "go_type",
                            "start": 70015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70029,
                            "name": "after",
                            "start": 70024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70032,
                            "name": "x",
                            "start": 70031,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70035,
                            "name": "y",
                            "start": 70034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70046,
                            "name": "repeating",
                            "start": 70037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70057,
                            "name": "condition",
                            "start": 70048,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 180003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 70000,
                    "type": "function",
                    "view": "function Spawn(go_type: any, after: any, x: any, y: any, repeating: any, condition: any)\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome2.lua",
                "finish": 70014,
                "start": 70009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 70022,
                            "name": "go_type",
                            "start": 70015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70032,
                            "name": "quantity",
                            "start": 70024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70035,
                            "name": "x",
                            "start": 70034,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 70038,
                            "name": "y",
                            "start": 70037,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 160003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 70000,
                    "type": "function",
                    "view": "function Spawn(go_type: any, quantity: any, x: any, y: any)\n  -> table"
                },
                "file": "file:///home/baal/Code/gameJam/src/biome/Biome3.lua",
                "finish": 70014,
                "start": 70009,
                "type": "setglobal"
            }
        ],
        "name": "Spawn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 670031,
                    "start": 670012,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 670009,
                "start": 670000,
                "type": "setglobal"
            }
        ],
        "name": "Starfield",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": [
                    {
                        "finish": 29,
                        "start": 20,
                        "type": "doc.extends.name",
                        "view": "UIElement"
                    }
                ],
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIButton.lua",
                "finish": 29,
                "start": 10,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 60020,
                    "start": 60019,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 60016,
                "name": "BOTTOM",
                "start": 60000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 90031,
                    "start": 90030,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 90027,
                "name": "CENTER_HORIZONTAL",
                "start": 90000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 100029,
                    "start": 100028,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 100025,
                "name": "CENTER_VERTICAL",
                "start": 100000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 70019,
                    "start": 70017,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 70014,
                "name": "LEFT",
                "start": 70000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 80019,
                    "start": 80018,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 80015,
                "name": "RIGHT",
                "start": 80000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 50018,
                    "start": 50016,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 50013,
                "name": "TOP",
                "start": 50000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 370008,
                            "name": "self",
                            "start": 370008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 370041,
                            "name": "xInt",
                            "start": 370037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 370047,
                            "name": "yInt",
                            "start": 370043,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 370000,
                    "type": "function",
                    "view": "(method) UIElement:calculatePosition(xInt: any, yInt: any)\n  -> unknown\n  2. unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 370036,
                "name": "calculatePosition",
                "start": 370009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 290008,
                            "name": "self",
                            "start": 290008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 290029,
                    "start": 290000,
                    "type": "function",
                    "view": "(method) UIElement:draw()"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 290023,
                "name": "draw",
                "start": 290009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430008,
                            "name": "self",
                            "start": 430008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 490003,
                    "start": 430000,
                    "type": "function",
                    "view": "(method) UIElement:drawHitbox()"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 430029,
                "name": "drawHitbox",
                "start": 430009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310008,
                            "name": "self",
                            "start": 310008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 350003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "(method) UIElement:getOpticalDimensions()\n  -> unknown\n  2. unknown\n  3. unknown\n  4. unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 310039,
                "name": "getOpticalDimensions",
                "start": 310009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 210022,
                    "start": 210010,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 210007,
                "name": "h",
                "start": 210001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 130008,
                            "name": "self",
                            "start": 130008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 130025,
                            "name": "x",
                            "start": 130024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 130028,
                            "name": "y",
                            "start": 130027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 250003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "UIElement"
                        }
                    ],
                    "start": 130000,
                    "type": "function",
                    "view": "(method) UIElement:init(x: any, y: any)\n  -> UIElement"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 130023,
                "name": "init",
                "start": 130009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 180012,
                    "start": 180011,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 180008,
                "name": "sx",
                "start": 180001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 190012,
                    "start": 190011,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 190008,
                "name": "sy",
                "start": 190001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270008,
                            "name": "self",
                            "start": 270008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 270028,
                            "name": "dt",
                            "start": 270026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 270033,
                    "start": 270000,
                    "type": "function",
                    "view": "(method) UIElement:update(dt: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 270025,
                "name": "update",
                "start": 270009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 200022,
                    "start": 200010,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 200007,
                "name": "w",
                "start": 200001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 160011,
                    "start": 160010,
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 160007,
                "name": "x",
                "start": 160001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 170011,
                    "start": 170010,
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 170007,
                "name": "y",
                "start": 170001,
                "type": "setfield",
                "visible": "public"
            }
        ],
        "name": "UIButton",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": [
                    {
                        "finish": 10027,
                        "start": 10021,
                        "type": "doc.extends.name",
                        "view": "Object"
                    }
                ],
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 10027,
                "start": 10010,
                "type": "doc.class"
            }
        ],
        "fields": [
            {
                "extends": {
                    "finish": 60020,
                    "start": 60019,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 60016,
                "name": "BOTTOM",
                "start": 60000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 90031,
                    "start": 90030,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 90027,
                "name": "CENTER_HORIZONTAL",
                "start": 90000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 100029,
                    "start": 100028,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 100025,
                "name": "CENTER_VERTICAL",
                "start": 100000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 70019,
                    "start": 70017,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 70014,
                "name": "LEFT",
                "start": 70000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 80019,
                    "start": 80018,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 80015,
                "name": "RIGHT",
                "start": 80000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 50018,
                    "start": 50016,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 50013,
                "name": "TOP",
                "start": 50000,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 370008,
                            "name": "self",
                            "start": 370008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 370041,
                            "name": "xInt",
                            "start": 370037,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 370047,
                            "name": "yInt",
                            "start": 370043,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 370000,
                    "type": "function",
                    "view": "(method) UIElement:calculatePosition(xInt: any, yInt: any)\n  -> unknown\n  2. unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 370036,
                "name": "calculatePosition",
                "start": 370009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 290008,
                            "name": "self",
                            "start": 290008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 290029,
                    "start": 290000,
                    "type": "function",
                    "view": "(method) UIElement:draw()"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 290023,
                "name": "draw",
                "start": 290009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430008,
                            "name": "self",
                            "start": 430008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 490003,
                    "start": 430000,
                    "type": "function",
                    "view": "(method) UIElement:drawHitbox()"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 430029,
                "name": "drawHitbox",
                "start": 430009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310008,
                            "name": "self",
                            "start": 310008,
                            "type": "self",
                            "view": "UIElement"
                        }
                    ],
                    "finish": 350003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "(method) UIElement:getOpticalDimensions()\n  -> unknown\n  2. unknown\n  3. unknown\n  4. unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 310039,
                "name": "getOpticalDimensions",
                "start": 310009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 210022,
                    "start": 210010,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 210007,
                "name": "h",
                "start": 210001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 130008,
                            "name": "self",
                            "start": 130008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 130025,
                            "name": "x",
                            "start": 130024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 130028,
                            "name": "y",
                            "start": 130027,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 250003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "UIElement"
                        }
                    ],
                    "start": 130000,
                    "type": "function",
                    "view": "(method) UIElement:init(x: any, y: any)\n  -> UIElement"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 130023,
                "name": "init",
                "start": 130009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 180012,
                    "start": 180011,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 180008,
                "name": "sx",
                "start": 180001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 190012,
                    "start": 190011,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 190008,
                "name": "sy",
                "start": 190001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 270008,
                            "name": "self",
                            "start": 270008,
                            "type": "self",
                            "view": "UIElement"
                        },
                        {
                            "finish": 270028,
                            "name": "dt",
                            "start": 270026,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 270033,
                    "start": 270000,
                    "type": "function",
                    "view": "(method) UIElement:update(dt: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 270025,
                "name": "update",
                "start": 270009,
                "type": "setmethod",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 200022,
                    "start": 200010,
                    "type": "binary",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 200007,
                "name": "w",
                "start": 200001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 160011,
                    "start": 160010,
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 160007,
                "name": "x",
                "start": 160001,
                "type": "setfield",
                "visible": "public"
            },
            {
                "extends": {
                    "finish": 170011,
                    "start": 170010,
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "file:///home/baal/Code/gameJam/src/ui/atom/UIElement.lua",
                "finish": 170007,
                "name": "y",
                "start": 170001,
                "type": "setfield",
                "visible": "public"
            }
        ],
        "name": "UIElement",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 1440038,
                    "start": 1440035,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1440027,
                "start": 1440014,
                "type": "setglobal"
            }
        ],
        "name": "WINDOW_HEIGHT",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "314",
                    "finish": 1440033,
                    "rawdesc": "314",
                    "start": 1440030,
                    "type": "integer",
                    "view": "integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1440012,
                "start": 1440000,
                "type": "setglobal"
            }
        ],
        "desc": "314",
        "name": "WINDOW_WIDTH",
        "rawdesc": "314",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 870050,
                    "start": 870013,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 870010,
                "start": 870000,
                "type": "setglobal"
            }
        ],
        "name": "YellaFella",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/51/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_G\"])\n",
                    "finish": 700007,
                    "rawdesc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/51/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_G\"])\n",
                    "start": 700005,
                    "type": "table",
                    "view": "_G"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 700002,
                "start": 700000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/51/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_G\"])\n",
        "name": "_G",
        "rawdesc": "\nA global variable (not a function) that holds the global environment (see [§2.2](command:extension.lua.doc?[\"en-us/51/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_G\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_VERSION\"])\n",
                    "finish": 3880020,
                    "rawdesc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_VERSION\"])\n",
                    "start": 3880011,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3880008,
                "start": 3880000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_VERSION\"])\n",
        "name": "_VERSION",
        "rawdesc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-_VERSION\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-arg\"])\n",
                    "finish": 80008,
                    "rawdesc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-arg\"])\n",
                    "start": 80006,
                    "type": "table",
                    "view": "string[]"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-arg\"])\n",
        "name": "arg",
        "rawdesc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-arg\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210017,
                            "name": "v",
                            "start": 210016,
                            "type": "local",
                            "view": "<T>?"
                        },
                        {
                            "finish": 210026,
                            "name": "message",
                            "start": 210019,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210031,
                            "start": 210028,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-assert\"])",
                    "finish": 210036,
                    "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-assert\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function assert(v?: <T>, message?: any, ...any)\n  -> <T>\n  2. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 210015,
                "start": 210009,
                "type": "setglobal"
            }
        ],
        "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-assert\"])",
        "name": "assert",
        "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-assert\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 180037,
                    "start": 180010,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/main.lua",
                "finish": 180007,
                "start": 180001,
                "type": "setglobal"
            }
        ],
        "name": "button",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 450003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 290000,
                    "type": "function",
                    "view": "function calcInput()\n  -> integer\n  2. integer"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 290018,
                "start": 290009,
                "type": "setglobal"
            }
        ],
        "name": "calcInput",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 410027,
                            "name": "opt",
                            "start": 410024,
                            "type": "local",
                            "view": "gcoptions?"
                        },
                        {
                            "finish": 410032,
                            "name": "arg",
                            "start": 410029,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"setpause\" -- Set `pause`.\n    | \"setstepmul\" -- Set `step multiplier`.\n```",
                    "finish": 410037,
                    "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"setpause\" -- Set `pause`.\n    | \"setstepmul\" -- Set `step multiplier`.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function collectgarbage(opt?: gcoptions, arg?: integer)\n  -> any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 410023,
                "start": 410009,
                "type": "setglobal"
            }
        ],
        "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"setpause\" -- Set `pause`.\n    | \"setstepmul\" -- Set `step multiplier`.\n```",
        "name": "collectgarbage",
        "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"setpause\" -- Set `pause`.\n    | \"setstepmul\" -- Set `step multiplier`.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine\"])\n",
                    "finish": 80014,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine\"])\n",
                    "start": 80012,
                    "type": "table",
                    "view": "coroutinelib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 80009,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine\"])\n",
        "name": "coroutine",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "name": "co",
                            "start": 390025,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.close\"])",
                    "finish": 390032,
                    "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.close\"])",
                    "returns": [
                        {
                            "name": "noerror",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errorobject",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 390024,
                "start": 390009,
                "type": "setfield"
            }
        ],
        "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.close\"])",
        "name": "coroutine.close",
        "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.close\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 180027,
                            "name": "f",
                            "start": 180026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.create\"])",
                    "finish": 180032,
                    "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.create\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": 180000,
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 180025,
                "start": 180009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.create\"])",
        "name": "coroutine.create",
        "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.create\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns true when the running coroutine can yield.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.isyieldable\"])",
                    "finish": 280036,
                    "rawdesc": "\nReturns true when the running coroutine can yield.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.isyieldable\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 280000,
                    "type": "function",
                    "view": "function coroutine.isyieldable()\n  -> boolean"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 280030,
                "start": 280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns true when the running coroutine can yield.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.isyieldable\"])",
        "name": "coroutine.isyieldable",
        "rawdesc": "\nReturns true when the running coroutine can yield.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.isyieldable\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500028,
                            "name": "co",
                            "start": 500026,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 500034,
                            "name": "val1",
                            "start": 500030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 500039,
                            "start": 500036,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.resume\"])",
                    "finish": 500044,
                    "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.resume\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 500025,
                "start": 500009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.resume\"])",
        "name": "coroutine.resume",
        "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.resume\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.running\"])",
                    "finish": 600032,
                    "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.running\"])",
                    "returns": [
                        {
                            "name": "running",
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "name": "ismain",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 600026,
                "start": 600009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.running\"])",
        "name": "coroutine.running",
        "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.running\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740028,
                            "name": "co",
                            "start": 740026,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": 740033,
                    "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 740025,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "name": "coroutine.status",
        "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840025,
                            "name": "f",
                            "start": 840024,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.wrap\"])",
                    "finish": 840030,
                    "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.wrap\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 840023,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.wrap\"])",
        "name": "coroutine.wrap",
        "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.wrap\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930028,
                            "start": 930025,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "async": true,
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.yield\"])",
                    "finish": 930033,
                    "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.yield\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/coroutine.lua",
                "finish": 930024,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.yield\"])",
        "name": "coroutine.yield",
        "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-coroutine.yield\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 590035,
                    "start": 590007,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 590004,
                "start": 590000,
                "type": "setglobal"
            }
        ],
        "name": "cron",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug\"])\n",
                    "finish": 80010,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug\"])\n",
                    "start": 80008,
                    "type": "table",
                    "view": "debuglib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug\"])\n",
        "name": "debug",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.debug\"])",
                    "finish": 290026,
                    "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.debug\"])",
                    "start": 290000,
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 290020,
                "start": 290009,
                "type": "setfield"
            }
        ],
        "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.debug\"])",
        "name": "debug.debug",
        "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.debug\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 400024,
                            "name": "o",
                            "start": 400023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getfenv\"])",
                    "finish": 400029,
                    "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 400000,
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 400022,
                "start": 400009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getfenv\"])",
        "name": "debug.getfenv",
        "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getfenv\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 520025,
                            "name": "co",
                            "start": 520023,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.gethook\"])",
                    "finish": 520030,
                    "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.gethook\"])",
                    "returns": [
                        {
                            "name": "hook",
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "name": "mask",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 520000,
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 520022,
                "start": 520009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.gethook\"])",
        "name": "debug.gethook",
        "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.gethook\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740029,
                            "name": "thread",
                            "start": 740023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 740032,
                            "name": "f",
                            "start": 740031,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 740038,
                            "name": "what",
                            "start": 740034,
                            "type": "local",
                            "view": "infowhat?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`\n   +> \"f\" -- `func`\n   +> \"L\" -- `activelines`\n```",
                    "finish": 740043,
                    "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`\n   +> \"f\" -- `func`\n   +> \"L\" -- `activelines`\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: infowhat)\n  -> debuginfo"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 740022,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`\n   +> \"f\" -- `func`\n   +> \"L\" -- `activelines`\n```",
        "name": "debug.getinfo",
        "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`\n   +> \"f\" -- `func`\n   +> \"L\" -- `activelines`\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 880030,
                            "name": "thread",
                            "start": 880024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 880037,
                            "name": "level",
                            "start": 880032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 880044,
                            "name": "index",
                            "start": 880039,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getlocal\"])",
                    "finish": 880049,
                    "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 880000,
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, level: integer, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 880023,
                "start": 880009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getlocal\"])",
        "name": "debug.getlocal",
        "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getlocal\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 980034,
                            "name": "object",
                            "start": 980028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getmetatable\"])",
                    "finish": 980039,
                    "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getmetatable\"])",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 980000,
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 980027,
                "start": 980009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getmetatable\"])",
        "name": "debug.getmetatable",
        "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getmetatable\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getregistry\"])",
                    "finish": 1070032,
                    "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getregistry\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1070000,
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1070026,
                "start": 1070009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getregistry\"])",
        "name": "debug.getregistry",
        "rawdesc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getregistry\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190027,
                            "name": "f",
                            "start": 1190026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1190031,
                            "name": "up",
                            "start": 1190029,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getupvalue\"])",
                    "finish": 1190036,
                    "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1190025,
                "start": 1190009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getupvalue\"])",
        "name": "debug.getupvalue",
        "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.getupvalue\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350035,
                            "name": "limit",
                            "start": 1350030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "deprecated": true,
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setcstacklimit\"])",
                    "finish": 1350040,
                    "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setcstacklimit\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1350029,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setcstacklimit\"])",
        "name": "debug.setcstacklimit",
        "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setcstacklimit\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1470029,
                            "name": "object",
                            "start": 1470023,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 1470034,
                            "name": "env",
                            "start": 1470031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setfenv\"])",
                    "finish": 1470039,
                    "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setfenv\"])",
                    "returns": [
                        {
                            "name": "object",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1470022,
                "start": 1470009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setfenv\"])",
        "name": "debug.setfenv",
        "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setfenv\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1660029,
                            "name": "thread",
                            "start": 1660023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1660035,
                            "name": "hook",
                            "start": 1660031,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1660041,
                            "name": "mask",
                            "start": 1660037,
                            "type": "local",
                            "view": "hookmask"
                        },
                        {
                            "finish": 1660048,
                            "name": "count",
                            "start": 1660043,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": 1660053,
                    "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "start": 1660000,
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: hookmask, count?: integer)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1660022,
                "start": 1660009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "name": "debug.sethook",
        "rawdesc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1790030,
                            "name": "thread",
                            "start": 1790024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1790037,
                            "name": "level",
                            "start": 1790032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1790044,
                            "name": "index",
                            "start": 1790039,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1790051,
                            "name": "value",
                            "start": 1790046,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setlocal\"])",
                    "finish": 1790056,
                    "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setlocal\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1790000,
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1790023,
                "start": 1790009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setlocal\"])",
        "name": "debug.setlocal",
        "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setlocal\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1900033,
                            "name": "value",
                            "start": 1900028,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 1900039,
                            "name": "meta",
                            "start": 1900035,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setmetatable\"])",
                    "finish": 1900044,
                    "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setmetatable\"])",
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1900000,
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 1900027,
                "start": 1900009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setmetatable\"])",
        "name": "debug.setmetatable",
        "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setmetatable\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2010027,
                            "name": "f",
                            "start": 2010026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2010031,
                            "name": "up",
                            "start": 2010029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2010038,
                            "name": "value",
                            "start": 2010033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setupvalue\"])",
                    "finish": 2010043,
                    "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setupvalue\"])",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2010000,
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 2010025,
                "start": 2010009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setupvalue\"])",
        "name": "debug.setupvalue",
        "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.setupvalue\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2150031,
                            "name": "thread",
                            "start": 2150025,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 2150040,
                            "name": "message",
                            "start": 2150033,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2150047,
                            "name": "level",
                            "start": 2150042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.traceback\"])",
                    "finish": 2150052,
                    "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.traceback\"])",
                    "returns": [
                        {
                            "name": "message",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2150000,
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 2150024,
                "start": 2150009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.traceback\"])",
        "name": "debug.traceback",
        "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.traceback\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2270026,
                            "name": "f",
                            "start": 2270025,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2270029,
                            "name": "n",
                            "start": 2270028,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvalueid\"])",
                    "finish": 2270034,
                    "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvalueid\"])",
                    "returns": [
                        {
                            "name": "id",
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": 2270000,
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 2270024,
                "start": 2270009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvalueid\"])",
        "name": "debug.upvalueid",
        "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvalueid\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2390029,
                            "name": "f1",
                            "start": 2390027,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2390033,
                            "name": "n1",
                            "start": 2390031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2390037,
                            "name": "f2",
                            "start": 2390035,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2390041,
                            "name": "n2",
                            "start": 2390039,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvaluejoin\"])",
                    "finish": 2390046,
                    "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvaluejoin\"])",
                    "start": 2390000,
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/debug.lua",
                "finish": 2390026,
                "start": 2390009,
                "type": "setfield"
            }
        ],
        "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvaluejoin\"])",
        "name": "debug.upvaluejoin",
        "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-debug.upvaluejoin\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500024,
                            "name": "filename",
                            "start": 500016,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-dofile\"])",
                    "finish": 500029,
                    "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-dofile\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function dofile(filename?: string)\n  -> ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 500015,
                "start": 500009,
                "type": "setglobal"
            }
        ],
        "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-dofile\"])",
        "name": "dofile",
        "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-dofile\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 620022,
                            "name": "message",
                            "start": 620015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 620029,
                            "name": "level",
                            "start": 620024,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-error\"])",
                    "finish": 620034,
                    "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-error\"])",
                    "start": 620000,
                    "type": "function",
                    "view": "function error(message: any, level?: integer)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 620014,
                "start": 620009,
                "type": "setglobal"
            }
        ],
        "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-error\"])",
        "name": "error",
        "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-error\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1510003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function getMousePosition()\n  -> unknown\n  2. unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1470025,
                "start": 1470009,
                "type": "setglobal"
            }
        ],
        "name": "getMousePosition",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 810018,
                            "name": "f",
                            "start": 810017,
                            "type": "local",
                            "view": "(integer|fun(...any):...unknown)?"
                        }
                    ],
                    "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getfenv\"])",
                    "finish": 810023,
                    "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 810000,
                    "type": "function",
                    "view": "function getfenv(f?: integer|fun(...any):...unknown)\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 810016,
                "start": 810009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getfenv\"])",
        "name": "getfenv",
        "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getfenv\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 910028,
                            "name": "object",
                            "start": 910022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getmetatable\"])",
                    "finish": 910033,
                    "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getmetatable\"])",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 910000,
                    "type": "function",
                    "view": "function getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 910021,
                "start": 910009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getmetatable\"])",
        "name": "getmetatable",
        "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-getmetatable\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 100049,
                    "start": 100009,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/Highscore.lua",
                "finish": 100006,
                "start": 100002,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 70046,
                    "start": 70008,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/Save.lua",
                "finish": 70005,
                "start": 70001,
                "type": "setglobal"
            }
        ],
        "name": "info",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io\"])\n",
                    "finish": 260007,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io\"])\n",
                    "start": 260005,
                    "type": "table",
                    "view": "iolib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 260002,
                "start": 260000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io\"])\n",
        "name": "io",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "finish": 510022,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "start": 510018,
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 510027,
                    "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "exitcode?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 510000,
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: exitcode?\n  3. code: integer?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 510017,
                "start": 510009,
                "type": "setfield"
            }
        ],
        "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "io.close",
        "rawdesc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.flush\"])",
                    "finish": 580023,
                    "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.flush\"])",
                    "start": 580000,
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 580017,
                "start": 580009,
                "type": "setfield"
            }
        ],
        "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.flush\"])",
        "name": "io.flush",
        "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.flush\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "finish": 670022,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "start": 670018,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.input\"])",
                    "finish": 670027,
                    "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.input\"])",
                    "start": 670000,
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 670017,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.input\"])",
        "name": "io.input",
        "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.input\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "filename",
                            "start": 830018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 830031,
                            "start": 830028,
                            "type": "...",
                            "view": "readmode"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
                    "finish": 830036,
                    "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...readmode)\n  -> fun():any, ...unknown"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 830017,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
        "name": "io.lines",
        "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950025,
                            "name": "filename",
                            "start": 950017,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950031,
                            "name": "mode",
                            "start": 950027,
                            "type": "local",
                            "view": "openmode?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": 950036,
                    "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: openmode)\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 950016,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "name": "io.open",
        "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "finish": 1040023,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "start": 1040019,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.output\"])",
                    "finish": 1040028,
                    "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.output\"])",
                    "start": 1040000,
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1040018,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.output\"])",
        "name": "io.output",
        "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.output\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190022,
                            "name": "prog",
                            "start": 1190018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1190028,
                            "name": "mode",
                            "start": 1190024,
                            "type": "local",
                            "view": "popenmode?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": 1190033,
                    "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: popenmode)\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1190017,
                "start": 1190009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "name": "io.popen",
        "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1300020,
                            "start": 1300017,
                            "type": "...",
                            "view": "readmode"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
                    "finish": 1300025,
                    "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1300000,
                    "type": "function",
                    "view": "function io.read(...readmode)\n  -> any\n  2. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1300016,
                "start": 1300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
        "name": "io.read",
        "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"*n\" -- Reads a numeral and returns it as number.\n    | \"*a\" -- Reads the whole file.\n   -> \"*l\" -- Reads the next line skipping the end of line.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.tmpfile\"])",
                    "finish": 1390025,
                    "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.tmpfile\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1390019,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.tmpfile\"])",
        "name": "io.tmpfile",
        "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.tmpfile\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "finish": 1540021,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-file\"])\n",
                            "start": 1540017,
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": 1540026,
                    "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "filetype"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> filetype"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1540016,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "name": "io.type",
        "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1630021,
                            "start": 1630018,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"])",
                    "finish": 1630026,
                    "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1630000,
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/io.lua",
                "finish": 1630017,
                "start": 1630009,
                "type": "setfield"
            }
        ],
        "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"])",
        "name": "io.write",
        "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1080017,
                            "name": "t",
                            "start": 1080016,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-ipairs\"])",
                    "finish": 1080022,
                    "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-ipairs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: <V>[], i?: integer):integer, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        },
                        {
                            "name": "i",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1080000,
                    "type": "function",
                    "view": "function ipairs(t: <T:table>)\n  -> fun(table: <V>[], i?: integer):integer, <V>\n  2. <T:table>\n  3. i: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1080015,
                "start": 1080009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-ipairs\"])",
        "name": "ipairs",
        "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the key–value pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-ipairs\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250018,
                            "name": "func",
                            "start": 1250014,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 1250029,
                            "name": "chunkname",
                            "start": 1250020,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk using function `func` to get its pieces. Each call to `func` must return a string that concatenates with previous results.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-load\"])",
                    "finish": 1250034,
                    "rawdesc": "\nLoads a chunk using function `func` to get its pieces. Each call to `func` must return a string that concatenates with previous results.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-load\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function load(func: function, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1250013,
                "start": 1250009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk using function `func` to get its pieces. Each call to `func` must return a string that concatenates with previous results.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-load\"])",
        "name": "load",
        "rawdesc": "\nLoads a chunk using function `func` to get its pieces. Each call to `func` must return a string that concatenates with previous results.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-load\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1360026,
                            "name": "filename",
                            "start": 1360018,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadfile\"])",
                    "finish": 1360031,
                    "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadfile\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1360000,
                    "type": "function",
                    "view": "function loadfile(filename?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1360017,
                "start": 1360009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadfile\"])",
        "name": "loadfile",
        "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadfile\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1490024,
                            "name": "text",
                            "start": 1490020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1490035,
                            "name": "chunkname",
                            "start": 1490026,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadstring\"])",
                    "finish": 1490040,
                    "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadstring\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1490000,
                    "type": "function",
                    "view": "function loadstring(text: string, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1490019,
                "start": 1490009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadstring\"])",
        "name": "loadstring",
        "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-loadstring\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 20,
                            "name": "t",
                            "start": 19,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 500003,
                    "start": 0,
                    "type": "function",
                    "view": "function love.conf(t: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/conf.lua",
                "finish": 18,
                "start": 9,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 20,
                            "name": "t",
                            "start": 19,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 350003,
                    "start": 0,
                    "type": "function",
                    "view": "function love.conf(t: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/conf.lua",
                "finish": 18,
                "start": 9,
                "type": "setfield"
            }
        ],
        "name": "love.conf",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1660003,
                    "start": 1530000,
                    "type": "function",
                    "view": "function love.draw()"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1530018,
                "start": 1530009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 450003,
                    "start": 320000,
                    "type": "function",
                    "view": "function love.draw()"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/main.lua",
                "finish": 320018,
                "start": 320009,
                "type": "setfield"
            }
        ],
        "name": "love.draw",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1760028,
                            "name": "key",
                            "start": 1760025,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1780003,
                    "start": 1760000,
                    "type": "function",
                    "view": "function love.keypressed(key: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1760024,
                "start": 1760009,
                "type": "setfield"
            }
        ],
        "name": "love.keypressed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1270003,
                    "start": 930000,
                    "type": "function",
                    "view": "function love.load()"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 930018,
                "start": 930009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [],
                    "finish": 200003,
                    "start": 160000,
                    "type": "function",
                    "view": "function love.load()"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/main.lua",
                "finish": 160018,
                "start": 160009,
                "type": "setfield"
            }
        ],
        "name": "love.load",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "finish": 1740003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1680000,
                    "type": "function",
                    "view": "function love.quit()\n  -> boolean"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1680018,
                "start": 1680009,
                "type": "setfield"
            }
        ],
        "name": "love.quit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1290023,
                            "name": "dt",
                            "start": 1290021,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 1420003,
                    "start": 1290000,
                    "type": "function",
                    "view": "function love.update(dt: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 1290020,
                "start": 1290009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 220023,
                            "name": "dt",
                            "start": 220021,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 300003,
                    "start": 220000,
                    "type": "function",
                    "view": "function love.update(dt: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/main.lua",
                "finish": 220020,
                "start": 220009,
                "type": "setfield"
            }
        ],
        "name": "love.update",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math\"])\n",
                    "finish": 200009,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math\"])\n",
                    "start": 200007,
                    "type": "table",
                    "view": "mathlib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 200004,
                "start": 200000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math\"])\n",
        "name": "math",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310019,
                            "name": "x",
                            "start": 310018,
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.abs\"])",
                    "finish": 310024,
                    "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.abs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 310017,
                "start": 310009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.abs\"])",
        "name": "math.abs",
        "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.abs\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 410020,
                            "name": "x",
                            "start": 410019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.acos\"])",
                    "finish": 410025,
                    "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.acos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 410018,
                "start": 410009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.acos\"])",
        "name": "math.acos",
        "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.acos\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 510020,
                            "name": "x",
                            "start": 510019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.asin\"])",
                    "finish": 510025,
                    "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.asin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 510000,
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 510018,
                "start": 510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.asin\"])",
        "name": "math.asin",
        "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.asin\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 610020,
                            "name": "y",
                            "start": 610019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan\"])",
                    "finish": 610025,
                    "rawdesc": "\nReturns the arc tangent of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 610000,
                    "type": "function",
                    "view": "function math.atan(y: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 610018,
                "start": 610009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan\"])",
        "name": "math.atan",
        "rawdesc": "\nReturns the arc tangent of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730021,
                            "name": "y",
                            "start": 730020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 730024,
                            "name": "x",
                            "start": 730023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan2\"])",
                    "finish": 730029,
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan2\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 730019,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan2\"])",
        "name": "math.atan2",
        "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.atan2\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830020,
                            "name": "x",
                            "start": 830019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ceil\"])",
                    "finish": 830025,
                    "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ceil\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 830018,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ceil\"])",
        "name": "math.ceil",
        "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ceil\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930019,
                            "name": "x",
                            "start": 930018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cos\"])",
                    "finish": 930024,
                    "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cos\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 930017,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cos\"])",
        "name": "math.cos",
        "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cos\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040020,
                            "name": "x",
                            "start": 1040019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cosh\"])",
                    "finish": 1040025,
                    "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cosh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1040000,
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1040018,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cosh\"])",
        "name": "math.cosh",
        "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.cosh\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1140019,
                            "name": "x",
                            "start": 1140018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.deg\"])",
                    "finish": 1140024,
                    "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.deg\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1140000,
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1140017,
                "start": 1140009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.deg\"])",
        "name": "math.deg",
        "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.deg\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1240019,
                            "name": "x",
                            "start": 1240018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.exp\"])",
                    "finish": 1240024,
                    "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.exp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1240000,
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1240017,
                "start": 1240009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.exp\"])",
        "name": "math.exp",
        "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.exp\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1340021,
                            "name": "x",
                            "start": 1340020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.floor\"])",
                    "finish": 1340026,
                    "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.floor\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1340000,
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1340019,
                "start": 1340009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.floor\"])",
        "name": "math.floor",
        "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.floor\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1450020,
                            "name": "x",
                            "start": 1450019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1450023,
                            "name": "y",
                            "start": 1450022,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.fmod\"])",
                    "finish": 1450028,
                    "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.fmod\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1450000,
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1450018,
                "start": 1450009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.fmod\"])",
        "name": "math.fmod",
        "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.fmod\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1570021,
                            "name": "x",
                            "start": 1570020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.frexp\"])",
                    "finish": 1570026,
                    "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.frexp\"])",
                    "returns": [
                        {
                            "name": "m",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "e",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1570000,
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1570019,
                "start": 1570009,
                "type": "setfield"
            }
        ],
        "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.frexp\"])",
        "name": "math.frexp",
        "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.frexp\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1690021,
                            "name": "m",
                            "start": 1690020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1690024,
                            "name": "e",
                            "start": 1690023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ldexp\"])",
                    "finish": 1690029,
                    "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ldexp\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1690000,
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1690019,
                "start": 1690009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ldexp\"])",
        "name": "math.ldexp",
        "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ldexp\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1790019,
                            "name": "x",
                            "start": 1790018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the natural logarithm of `x` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log\"])",
                    "finish": 1790024,
                    "rawdesc": "\nReturns the natural logarithm of `x` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1790000,
                    "type": "function",
                    "view": "function math.log(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1790017,
                "start": 1790009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the natural logarithm of `x` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log\"])",
        "name": "math.log",
        "rawdesc": "\nReturns the natural logarithm of `x` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1900021,
                            "name": "x",
                            "start": 1900020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log10\"])",
                    "finish": 1900026,
                    "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log10\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1900000,
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 1900019,
                "start": 1900009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log10\"])",
        "name": "math.log10",
        "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.log10\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2020019,
                            "name": "x",
                            "start": 2020018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2020024,
                            "start": 2020021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.max\"])",
                    "finish": 2020029,
                    "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.max\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2020000,
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2020017,
                "start": 2020009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.max\"])",
        "name": "math.max",
        "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.max\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2140019,
                            "name": "x",
                            "start": 2140018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2140024,
                            "start": 2140021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.min\"])",
                    "finish": 2140029,
                    "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.min\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2140000,
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2140017,
                "start": 2140009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.min\"])",
        "name": "math.min",
        "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.min\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2250020,
                            "name": "x",
                            "start": 2250019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.modf\"])",
                    "finish": 2250025,
                    "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.modf\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2250000,
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2250018,
                "start": 2250009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.modf\"])",
        "name": "math.modf",
        "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.modf\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2370019,
                            "name": "x",
                            "start": 2370018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 2370022,
                            "name": "y",
                            "start": 2370021,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.pow\"])",
                    "finish": 2370027,
                    "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.pow\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2370000,
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2370017,
                "start": 2370009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.pow\"])",
        "name": "math.pow",
        "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.pow\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2470019,
                            "name": "x",
                            "start": 2470018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.rad\"])",
                    "finish": 2470024,
                    "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.rad\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2470000,
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2470017,
                "start": 2470009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.rad\"])",
        "name": "math.rad",
        "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.rad\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2630022,
                            "name": "m",
                            "start": 2630021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2630025,
                            "name": "n",
                            "start": 2630024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.random\"])",
                    "finish": 2630030,
                    "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.random\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2630000,
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2630020,
                "start": 2630009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.random\"])",
        "name": "math.random",
        "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.random\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2710026,
                            "name": "x",
                            "start": 2710025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nSets `x` as the \"seed\" for the pseudo-random generator.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.randomseed\"])",
                    "finish": 2710031,
                    "rawdesc": "\nSets `x` as the \"seed\" for the pseudo-random generator.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.randomseed\"])",
                    "start": 2710000,
                    "type": "function",
                    "view": "function math.randomseed(x: integer)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2710024,
                "start": 2710009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `x` as the \"seed\" for the pseudo-random generator.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.randomseed\"])",
        "name": "math.randomseed",
        "rawdesc": "\nSets `x` as the \"seed\" for the pseudo-random generator.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.randomseed\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2810019,
                            "name": "x",
                            "start": 2810018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sin\"])",
                    "finish": 2810024,
                    "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sin\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2810000,
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2810017,
                "start": 2810009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sin\"])",
        "name": "math.sin",
        "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sin\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2920020,
                            "name": "x",
                            "start": 2920019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sinh\"])",
                    "finish": 2920025,
                    "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sinh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2920000,
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 2920018,
                "start": 2920009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sinh\"])",
        "name": "math.sinh",
        "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sinh\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3020020,
                            "name": "x",
                            "start": 3020019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sqrt\"])",
                    "finish": 3020025,
                    "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sqrt\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3020000,
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3020018,
                "start": 3020009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sqrt\"])",
        "name": "math.sqrt",
        "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.sqrt\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3120019,
                            "name": "x",
                            "start": 3120018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tan\"])",
                    "finish": 3120024,
                    "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tan\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3120000,
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3120017,
                "start": 3120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tan\"])",
        "name": "math.tan",
        "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tan\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3230020,
                            "name": "x",
                            "start": 3230019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tanh\"])",
                    "finish": 3230025,
                    "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tanh\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3230000,
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3230018,
                "start": 3230009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tanh\"])",
        "name": "math.tanh",
        "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tanh\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3340025,
                            "name": "x",
                            "start": 3340024,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tointeger\"])",
                    "finish": 3340030,
                    "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tointeger\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 3340000,
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3340023,
                "start": 3340009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tointeger\"])",
        "name": "math.tointeger",
        "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.tointeger\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3470020,
                            "name": "x",
                            "start": 3470019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": 3470025,
                    "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": 3470000,
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3470018,
                "start": 3470009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "name": "math.type",
        "rawdesc": "\nMiss locale <math.type>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3580019,
                            "name": "m",
                            "start": 3580018,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3580022,
                            "name": "n",
                            "start": 3580021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ult\"])",
                    "finish": 3580027,
                    "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ult\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 3580000,
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/math.lua",
                "finish": 3580017,
                "start": 3580009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ult\"])",
        "name": "math.ult",
        "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-math.ult\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1650020,
                            "name": "name",
                            "start": 1650016,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1650025,
                            "start": 1650022,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-module\"])",
                    "finish": 1650030,
                    "rawdesc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-module\"])",
                    "start": 1650000,
                    "type": "function",
                    "view": "function module(name: string, ...any)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1650015,
                "start": 1650009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-module\"])",
        "name": "module",
        "rawdesc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-module\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170016,
                    "start": 170014,
                    "type": "getglobal",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/extension.lua",
                "finish": 170011,
                "start": 170001,
                "type": "setfield"
            }
        ],
        "name": "mt.__index",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1550023,
                            "name": "proxy",
                            "start": 1550018,
                            "type": "local",
                            "view": "boolean|table|userdata"
                        }
                    ],
                    "finish": 1550028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 1550000,
                    "type": "function",
                    "view": "function newproxy(proxy: boolean|table|userdata)\n  -> userdata"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1550017,
                "start": 1550009,
                "type": "setglobal"
            }
        ],
        "name": "newproxy",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1830019,
                            "name": "table",
                            "start": 1830014,
                            "type": "local",
                            "view": "table<<K>, <V>>"
                        },
                        {
                            "finish": 1830026,
                            "name": "index",
                            "start": 1830021,
                            "type": "local",
                            "view": "<K>?"
                        }
                    ],
                    "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"])",
                    "finish": 1830031,
                    "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<K>?"
                        },
                        {
                            "type": "function.return",
                            "view": "<V>?"
                        }
                    ],
                    "start": 1830000,
                    "type": "function",
                    "view": "function next(table: table<<K>, <V>>, index?: <K>)\n  -> <K>?\n  2. <V>?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 1830013,
                "start": 1830009,
                "type": "setglobal"
            }
        ],
        "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"])",
        "name": "next",
        "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os\"])\n",
                    "finish": 80007,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os\"])\n",
                    "start": 80005,
                    "type": "table",
                    "view": "oslib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 80002,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os\"])\n",
        "name": "os",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.clock\"])",
                    "finish": 170023,
                    "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.clock\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 170017,
                "start": 170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.clock\"])",
        "name": "os.clock",
        "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.clock\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840023,
                            "name": "format",
                            "start": 840017,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 840029,
                            "name": "time",
                            "start": 840025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.date\"])",
                    "finish": 840034,
                    "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.date\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 840016,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.date\"])",
        "name": "os.date",
        "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.date\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950023,
                            "name": "t2",
                            "start": 950021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 950027,
                            "name": "t1",
                            "start": 950025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.difftime\"])",
                    "finish": 950032,
                    "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.difftime\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 950020,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.difftime\"])",
        "name": "os.difftime",
        "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.difftime\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040027,
                            "name": "command",
                            "start": 1040020,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.execute\"])",
                    "finish": 1040032,
                    "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.execute\"])",
                    "returns": [
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1040000,
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> code: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1040019,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.execute\"])",
        "name": "os.execute",
        "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.execute\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120021,
                            "name": "code",
                            "start": 1120017,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 1120028,
                            "name": "close",
                            "start": 1120023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls the C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.exit\"])",
                    "finish": 1120033,
                    "rawdesc": "\nCalls the C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.exit\"])",
                    "start": 1120000,
                    "type": "function",
                    "view": "function os.exit(code?: integer, close: any)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1120016,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nCalls the C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.exit\"])",
        "name": "os.exit",
        "rawdesc": "\nCalls the C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.exit\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1220026,
                            "name": "varname",
                            "start": 1220019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.getenv\"])",
                    "finish": 1220031,
                    "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.getenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1220000,
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1220018,
                "start": 1220009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.getenv\"])",
        "name": "os.getenv",
        "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.getenv\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1320027,
                            "name": "filename",
                            "start": 1320019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.remove\"])",
                    "finish": 1320032,
                    "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.remove\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1320000,
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1320018,
                "start": 1320009,
                "type": "setfield"
            }
        ],
        "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.remove\"])",
        "name": "os.remove",
        "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.remove\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1430026,
                            "name": "oldname",
                            "start": 1430019,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1430035,
                            "name": "newname",
                            "start": 1430028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.rename\"])",
                    "finish": 1430040,
                    "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.rename\"])",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1430000,
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1430018,
                "start": 1430009,
                "type": "setfield"
            }
        ],
        "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.rename\"])",
        "name": "os.rename",
        "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.rename\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1610028,
                            "name": "locale",
                            "start": 1610022,
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": 1610038,
                            "name": "category",
                            "start": 1610030,
                            "type": "local",
                            "view": "localecategory?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": 1610043,
                    "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "returns": [
                        {
                            "name": "localecategory",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1610000,
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: localecategory)\n  -> localecategory: string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 1610021,
                "start": 1610009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "name": "os.setlocale",
        "rawdesc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2270021,
                            "name": "date",
                            "start": 2270017,
                            "type": "local",
                            "view": "osdateparam?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.time\"])",
                    "finish": 2270026,
                    "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.time\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2270000,
                    "type": "function",
                    "view": "function os.time(date?: osdateparam)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 2270016,
                "start": 2270009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.time\"])",
        "name": "os.time",
        "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.time\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.tmpname\"])",
                    "finish": 2360025,
                    "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.tmpname\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2360000,
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/os.lua",
                "finish": 2360019,
                "start": 2360009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.tmpname\"])",
        "name": "os.tmpname",
        "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-os.tmpname\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package\"])\n",
                    "finish": 410012,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package\"])\n",
                    "start": 410010,
                    "type": "table",
                    "view": "packagelib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 410007,
                "start": 410000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package\"])\n",
        "name": "package",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.config\"])\n",
                    "finish": 530003,
                    "rawdesc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.config\"])\n",
                    "start": 480017,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 480014,
                "start": 480000,
                "type": "setfield"
            }
        ],
        "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.config\"])\n",
        "name": "package.config",
        "rawdesc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.config\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loaders\"])\n",
                    "finish": 610020,
                    "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loaders\"])\n",
                    "start": 610018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 610015,
                "start": 610000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loaders\"])\n",
        "name": "package.loaders",
        "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loaders\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 710032,
                            "name": "libname",
                            "start": 710025,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 710042,
                            "name": "funcname",
                            "start": 710034,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loadlib\"])",
                    "finish": 710047,
                    "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loadlib\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 710000,
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 710024,
                "start": 710009,
                "type": "setfield"
            }
        ],
        "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loadlib\"])",
        "name": "package.loadlib",
        "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.loadlib\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchers\"])\n",
                    "finish": 790022,
                    "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchers\"])\n",
                    "start": 790020,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 790017,
                "start": 790000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchers\"])\n",
        "name": "package.searchers",
        "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchers\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 940032,
                            "name": "name",
                            "start": 940028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 940038,
                            "name": "path",
                            "start": 940034,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 940043,
                            "name": "sep",
                            "start": 940040,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 940048,
                            "name": "rep",
                            "start": 940045,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchpath\"])",
                    "finish": 940053,
                    "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchpath\"])",
                    "returns": [
                        {
                            "name": "filename",
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 940000,
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 940027,
                "start": 940009,
                "type": "setfield"
            }
        ],
        "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchpath\"])",
        "name": "package.searchpath",
        "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.searchpath\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030030,
                            "name": "module",
                            "start": 1030024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.seeall\"])",
                    "finish": 1030035,
                    "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.seeall\"])",
                    "start": 1030000,
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 1030023,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.seeall\"])",
        "name": "package.seeall",
        "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-package.seeall\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2030016,
                            "name": "t",
                            "start": 2030015,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pairs\"])",
                    "finish": 2030021,
                    "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pairs\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        }
                    ],
                    "start": 2030000,
                    "type": "function",
                    "view": "function pairs(t: <T:table>)\n  -> fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>\n  2. <T:table>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2030014,
                "start": 2030009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pairs\"])",
        "name": "pairs",
        "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all key–value pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pairs\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2170016,
                            "name": "f",
                            "start": 2170015,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 2170022,
                            "name": "arg1",
                            "start": 2170018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2170027,
                            "start": 2170024,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pcall\"])",
                    "finish": 2170032,
                    "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pcall\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2170000,
                    "type": "function",
                    "view": "function pcall(f: function, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2170014,
                "start": 2170009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pcall\"])",
        "name": "pcall",
        "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-pcall\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2270018,
                            "start": 2270015,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-print\"])",
                    "finish": 2270023,
                    "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-print\"])",
                    "start": 2270000,
                    "type": "function",
                    "view": "function print(...any)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2270014,
                "start": 2270009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-print\"])",
        "name": "print",
        "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-print\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2380020,
                            "name": "v1",
                            "start": 2380018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2380024,
                            "name": "v2",
                            "start": 2380022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawequal\"])",
                    "finish": 2380029,
                    "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawequal\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2380000,
                    "type": "function",
                    "view": "function rawequal(v1: any, v2: any)\n  -> boolean"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2380017,
                "start": 2380009,
                "type": "setglobal"
            }
        ],
        "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawequal\"])",
        "name": "rawequal",
        "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawequal\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2490021,
                            "name": "table",
                            "start": 2490016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2490028,
                            "name": "index",
                            "start": 2490023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawget\"])",
                    "finish": 2490033,
                    "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawget\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2490000,
                    "type": "function",
                    "view": "function rawget(table: table, index: any)\n  -> any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2490015,
                "start": 2490009,
                "type": "setglobal"
            }
        ],
        "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawget\"])",
        "name": "rawget",
        "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawget\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2590017,
                            "name": "v",
                            "start": 2590016,
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawlen\"])",
                    "finish": 2590022,
                    "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawlen\"])",
                    "returns": [
                        {
                            "name": "len",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2590000,
                    "type": "function",
                    "view": "function rawlen(v: string|table)\n  -> len: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2590015,
                "start": 2590009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawlen\"])",
        "name": "rawlen",
        "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawlen\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2720021,
                            "name": "table",
                            "start": 2720016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2720028,
                            "name": "index",
                            "start": 2720023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2720035,
                            "name": "value",
                            "start": 2720030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawset\"])",
                    "finish": 2720040,
                    "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawset\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2720000,
                    "type": "function",
                    "view": "function rawset(table: table, index: any, value: any)\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2720015,
                "start": 2720009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawset\"])",
        "name": "rawset",
        "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-rawset\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 90024,
                            "name": "modname",
                            "start": 90017,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nLoads the given module, returns any value returned by the given module(`true` when `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-require\"])",
                    "finish": 90029,
                    "rawdesc": "\nLoads the given module, returns any value returned by the given module(`true` when `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-require\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 90000,
                    "type": "function",
                    "view": "function require(modname: string)\n  -> unknown"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/package.lua",
                "finish": 90016,
                "start": 90009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads the given module, returns any value returned by the given module(`true` when `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-require\"])",
        "name": "require",
        "rawdesc": "\nLoads the given module, returns any value returned by the given module(`true` when `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-require\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 370015,
                    "start": 370012,
                    "type": "nil",
                    "view": "nil"
                },
                "file": "file:///home/baal/Code/gameJam/src/Save.lua",
                "finish": 370009,
                "start": 370001,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 390044,
                    "start": 390013,
                    "type": "getindex",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/Save.lua",
                "finish": 390010,
                "start": 390002,
                "type": "setglobal"
            }
        ],
        "name": "savedata",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2830021,
                            "name": "index",
                            "start": 2830016,
                            "type": "local",
                            "view": "integer|\"#\""
                        },
                        {
                            "finish": 2830026,
                            "start": 2830023,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "finish": 2830031,
                    "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2830000,
                    "type": "function",
                    "view": "function select(index: integer|\"#\", ...any)\n  -> any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2830015,
                "start": 2830009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "name": "select",
        "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2940018,
                            "name": "f",
                            "start": 2940017,
                            "type": "local",
                            "view": "fun(...any):...integer|unknown"
                        },
                        {
                            "finish": 2940025,
                            "name": "table",
                            "start": 2940020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setfenv\"])",
                    "finish": 2940030,
                    "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setfenv\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": 2940000,
                    "type": "function",
                    "view": "function setfenv(f: fun(...any):...integer|unknown, table: table)\n  -> function"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 2940016,
                "start": 2940009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setfenv\"])",
        "name": "setfenv",
        "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setfenv\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3310027,
                            "name": "table",
                            "start": 3310022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 3310038,
                            "name": "metatable",
                            "start": 3310029,
                            "type": "local",
                            "view": "(table|metatable)?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/51/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setmetatable\"])",
                    "finish": 3310043,
                    "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/51/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setmetatable\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3310000,
                    "type": "function",
                    "view": "function setmetatable(table: table, metatable?: table|metatable)\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3310021,
                "start": 3310009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/51/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setmetatable\"])",
        "name": "setmetatable",
        "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([§6.10](command:extension.lua.doc?[\"en-us/51/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-setmetatable\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430015,
                            "name": "t",
                            "start": 430014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 500003,
                    "start": 430000,
                    "type": "function",
                    "view": "function show(t: any)"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 430013,
                "start": 430009,
                "type": "setglobal"
            }
        ],
        "name": "show",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200017,
                            "name": "t",
                            "start": 200016,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 200024,
                            "name": "order",
                            "start": 200019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": 410003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function spairs(t: any, order: any)\n  -> function"
                },
                "file": "file:///home/baal/Code/gameJam/src/main.lua",
                "finish": 200015,
                "start": 200009,
                "type": "setglobal"
            }
        ],
        "name": "spairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string\"])\n",
                    "finish": 80011,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string\"])\n",
                    "start": 80009,
                    "type": "table",
                    "view": "stringlib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 80006,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string\"])\n",
        "name": "string",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200022,
                            "name": "s",
                            "start": 200021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 200025,
                            "name": "i",
                            "start": 200024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 200028,
                            "name": "j",
                            "start": 200027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.byte\"])",
                    "finish": 200033,
                    "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.byte\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 200020,
                "start": 200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.byte\"])",
        "name": "string.byte",
        "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.byte\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310025,
                            "name": "byte",
                            "start": 310021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 310030,
                            "start": 310027,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.char\"])",
                    "finish": 310035,
                    "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.char\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 310020,
                "start": 310009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.char\"])",
        "name": "string.char",
        "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.char\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 410022,
                            "name": "f",
                            "start": 410021,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.dump\"])",
                    "finish": 410027,
                    "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.dump\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 410020,
                "start": 410009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.dump\"])",
        "name": "string.dump",
        "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.dump\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 560022,
                            "name": "s",
                            "start": 560021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 560031,
                            "name": "pattern",
                            "start": 560024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 560037,
                            "name": "init",
                            "start": 560033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 560044,
                            "name": "plain",
                            "start": 560039,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
                    "finish": 560049,
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.find\"])",
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "rawdesc": "captured",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 560000,
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer|nil\n  2. end: integer|nil\n  3. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 560020,
                "start": 560009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` — captured",
        "name": "string.find",
        "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.find\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 670024,
                            "name": "s",
                            "start": 670023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 670029,
                            "start": 670026,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"])",
                    "finish": 670034,
                    "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 670000,
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 670022,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"])",
        "name": "string.format",
        "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 880024,
                            "name": "s",
                            "start": 880023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 880033,
                            "name": "pattern",
                            "start": 880026,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gmatch\"])",
                    "finish": 880038,
                    "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gmatch\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": 880000,
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number)\n  -> fun():string, ...unknown"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 880022,
                "start": 880009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gmatch\"])",
        "name": "string.gmatch",
        "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gmatch\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1020022,
                            "name": "s",
                            "start": 1020021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1020031,
                            "name": "pattern",
                            "start": 1020024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1020037,
                            "name": "repl",
                            "start": 1020033,
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": 1020040,
                            "name": "n",
                            "start": 1020039,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gsub\"])",
                    "finish": 1020045,
                    "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gsub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1020000,
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1020020,
                "start": 1020009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gsub\"])",
        "name": "string.gsub",
        "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.gsub\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120021,
                            "name": "s",
                            "start": 1120020,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.len\"])",
                    "finish": 1120026,
                    "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.len\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1120019,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.len\"])",
        "name": "string.len",
        "rawdesc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.len\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1220023,
                            "name": "s",
                            "start": 1220022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.lower\"])",
                    "finish": 1220028,
                    "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.lower\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1220000,
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1220021,
                "start": 1220009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.lower\"])",
        "name": "string.lower",
        "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.lower\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1340023,
                            "name": "s",
                            "start": 1340022,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1340032,
                            "name": "pattern",
                            "start": 1340025,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1340038,
                            "name": "init",
                            "start": 1340034,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.match\"])",
                    "finish": 1340043,
                    "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.match\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1340000,
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1340021,
                "start": 1340009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.match\"])",
        "name": "string.match",
        "rawdesc": "\nLooks for the first match of `pattern` (see [§6.4.1](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.match\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1480024,
                            "name": "fmt",
                            "start": 1480021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1480028,
                            "name": "v1",
                            "start": 1480026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1480032,
                            "name": "v2",
                            "start": 1480030,
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "finish": 1480037,
                            "start": 1480034,
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.pack\"])",
                    "finish": 1480042,
                    "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.pack\"])",
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1480000,
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2?: string|number, ...string|number)\n  -> binary: string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1480020,
                "start": 1480009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.pack\"])",
        "name": "string.pack",
        "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.pack\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1590028,
                            "name": "fmt",
                            "start": 1590025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.packsize\"])",
                    "finish": 1590033,
                    "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.packsize\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1590000,
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1590024,
                "start": 1590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.packsize\"])",
        "name": "string.packsize",
        "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.packsize\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1700021,
                            "name": "s",
                            "start": 1700020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1700024,
                            "name": "n",
                            "start": 1700023,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.rep\"])",
                    "finish": 1700029,
                    "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.rep\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1700000,
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1700019,
                "start": 1700009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.rep\"])",
        "name": "string.rep",
        "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.rep\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1800025,
                            "name": "s",
                            "start": 1800024,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.reverse\"])",
                    "finish": 1800030,
                    "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.reverse\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1800000,
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1800023,
                "start": 1800009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.reverse\"])",
        "name": "string.reverse",
        "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.reverse\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1920021,
                            "name": "s",
                            "start": 1920020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1920024,
                            "name": "i",
                            "start": 1920023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1920027,
                            "name": "j",
                            "start": 1920026,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.sub\"])",
                    "finish": 1920032,
                    "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.sub\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1920000,
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 1920019,
                "start": 1920009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.sub\"])",
        "name": "string.sub",
        "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.sub\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2060026,
                            "name": "fmt",
                            "start": 2060023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2060029,
                            "name": "s",
                            "start": 2060028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2060034,
                            "name": "pos",
                            "start": 2060031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.unpack\"])",
                    "finish": 2060039,
                    "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2060000,
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 2060022,
                "start": 2060009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.unpack\"])",
        "name": "string.unpack",
        "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [§6.4.2](command:extension.lua.doc?[\"en-us/51/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.unpack\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2160023,
                            "name": "s",
                            "start": 2160022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.upper\"])",
                    "finish": 2160028,
                    "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.upper\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2160000,
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/string.lua",
                "finish": 2160021,
                "start": 2160009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.upper\"])",
        "name": "string.upper",
        "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.upper\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table\"])\n",
                    "finish": 80010,
                    "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table\"])\n",
                    "start": 80008,
                    "type": "table",
                    "view": "tablelib"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table\"])\n",
        "name": "table",
        "rawdesc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table\"])\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210026,
                            "name": "list",
                            "start": 210022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 210031,
                            "name": "sep",
                            "start": 210028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 210034,
                            "name": "i",
                            "start": 210033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 210037,
                            "name": "j",
                            "start": 210036,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.concat\"])",
                    "finish": 210042,
                    "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.concat\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 210021,
                "start": 210009,
                "type": "setfield"
            }
        ],
        "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.concat\"])",
        "name": "table.concat",
        "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ··· sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.concat\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250027,
                            "name": "list",
                            "start": 1250023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1250037,
                            "name": "callback",
                            "start": 1250029,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "deprecated": true,
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreach\"])",
                    "finish": 1250042,
                    "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreach\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 1250022,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreach\"])",
        "name": "table.foreach",
        "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreach\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1380028,
                            "name": "list",
                            "start": 1380024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1380038,
                            "name": "callback",
                            "start": 1380030,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "deprecated": true,
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreachi\"])",
                    "finish": 1380043,
                    "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreachi\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1380000,
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 1380023,
                "start": 1380009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreachi\"])",
        "name": "table.foreachi",
        "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.foreachi\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1510024,
                            "name": "list",
                            "start": 1510020,
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "deprecated": true,
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.getn\"])",
                    "finish": 1510029,
                    "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.getn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1510000,
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 1510019,
                "start": 1510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.getn\"])",
        "name": "table.getn",
        "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.getn\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 320026,
                            "name": "list",
                            "start": 320022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 320031,
                            "name": "pos",
                            "start": 320028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 320038,
                            "name": "value",
                            "start": 320033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.insert\"])",
                    "finish": 320043,
                    "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.insert\"])",
                    "start": 320000,
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 320021,
                "start": 320009,
                "type": "setfield"
            }
        ],
        "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.insert\"])",
        "name": "table.insert",
        "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.insert\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430025,
                            "name": "table",
                            "start": 430020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.maxn\"])",
                    "finish": 430030,
                    "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.maxn\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.maxn\"])",
        "name": "table.maxn",
        "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.maxn\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630022,
                            "name": "a1",
                            "start": 630020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 630025,
                            "name": "f",
                            "start": 630024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630028,
                            "name": "e",
                            "start": 630027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630031,
                            "name": "t",
                            "start": 630030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630035,
                            "name": "a2",
                            "start": 630033,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.move\"])",
                    "finish": 630040,
                    "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.move\"])",
                    "returns": [
                        {
                            "name": "a2",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 630019,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.move\"])",
        "name": "table.move",
        "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],··· =\na1[f],···,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.move\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730023,
                            "start": 730020,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.pack\"])",
                    "finish": 730028,
                    "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.pack\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 730019,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.pack\"])",
        "name": "table.pack",
        "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.pack\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "list",
                            "start": 830022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 830031,
                            "name": "pos",
                            "start": 830028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.remove\"])",
                    "finish": 830036,
                    "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.remove\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 830021,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.remove\"])",
        "name": "table.remove",
        "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.remove\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930024,
                            "name": "list",
                            "start": 930020,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 930030,
                            "name": "comp",
                            "start": 930026,
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.sort\"])",
                    "finish": 930035,
                    "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.sort\"])",
                    "start": 930000,
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 930019,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.sort\"])",
        "name": "table.sort",
        "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.sort\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120026,
                            "name": "list",
                            "start": 1120022,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 1120029,
                            "name": "i",
                            "start": 1120028,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 1120032,
                            "name": "j",
                            "start": 1120031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.unpack\"])",
                    "finish": 1120037,
                    "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function table.unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/table.lua",
                "finish": 1120021,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.unpack\"])",
        "name": "table.unpack",
        "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-table.unpack\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3450019,
                            "name": "e",
                            "start": 3450018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/51/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tonumber\"])",
                    "finish": 3450024,
                    "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/51/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tonumber\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 3450000,
                    "type": "function",
                    "view": "function tonumber(e: any)\n  -> number?"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3450017,
                "start": 3450009,
                "type": "setglobal"
            }
        ],
        "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/51/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tonumber\"])",
        "name": "tonumber",
        "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [§3.1](command:extension.lua.doc?[\"en-us/51/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tonumber\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3600019,
                            "name": "v",
                            "start": 3600018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"])",
                    "finish": 3600024,
                    "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"])",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 3600000,
                    "type": "function",
                    "view": "function tostring(v: any)\n  -> string"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3600017,
                "start": 3600009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"])",
        "name": "tostring",
        "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-tostring\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3810015,
                            "name": "v",
                            "start": 3810014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "finish": 3810020,
                    "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "returns": [
                        {
                            "name": "type",
                            "type": "function.return",
                            "view": "type"
                        }
                    ],
                    "start": 3810000,
                    "type": "function",
                    "view": "function type(v: any)\n  -> type: type"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3810013,
                "start": 3810009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "name": "type",
        "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4280020,
                            "name": "list",
                            "start": 4280016,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 4280023,
                            "name": "i",
                            "start": 4280022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 4280026,
                            "name": "j",
                            "start": 4280025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-unpack\"])",
                    "finish": 4280031,
                    "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-unpack\"])",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 4280000,
                    "type": "function",
                    "view": "function unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 4280015,
                "start": 4280009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4350020,
                            "name": "list",
                            "start": 4350016,
                            "type": "local",
                            "view": "{ [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9> }"
                        }
                    ],
                    "finish": 4350025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T1>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T2>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T3>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T4>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T5>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T6>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T7>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T8>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T9>"
                        }
                    ],
                    "start": 4350000,
                    "type": "function",
                    "view": "function unpack(list: { [1]: <T1>, [2]: <T2>, [3]: <T3>, [4]: <T4>, [5]: <T5>, [6]: <T6>, [7]: <T7>, [8]: <T8>, [9]: <T9> })\n  -> <T1>\n  2. <T2>\n  3. <T3>\n  4. <T4>\n  5. <T5>\n  6. <T6>\n  7. <T7>\n  8. <T8>\n  9. <T9>"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 4350015,
                "start": 4350009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-unpack\"])",
        "name": "unpack",
        "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ···, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-unpack\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3980021,
                            "name": "message",
                            "start": 3980014,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3980026,
                            "start": 3980023,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-warn\"])",
                    "finish": 3980031,
                    "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-warn\"])",
                    "start": 3980000,
                    "type": "function",
                    "view": "function warn(message: string, ...any)"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 3980013,
                "start": 3980009,
                "type": "setglobal"
            }
        ],
        "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-warn\"])",
        "name": "warn",
        "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-warn\"])",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170037,
                    "start": 170010,
                    "type": "select",
                    "view": "unknown"
                },
                "file": "file:///home/baal/Code/gameJam/src/patchy/main.lua",
                "finish": 170007,
                "start": 170001,
                "type": "setglobal"
            }
        ],
        "name": "window",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4100017,
                            "name": "f",
                            "start": 4100016,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 4100022,
                            "name": "err",
                            "start": 4100019,
                            "type": "local",
                            "view": "function"
                        }
                    ],
                    "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-xpcall\"])",
                    "finish": 4100027,
                    "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-xpcall\"])",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 4100000,
                    "type": "function",
                    "view": "function xpcall(f: function, err: function)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///home/baal/.vscode/extensions/sumneko.lua-3.8.3-linux-x64/server/meta/Lua%205.1%20en-us%20utf8/basic.lua",
                "finish": 4100015,
                "start": 4100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-xpcall\"])",
        "name": "xpcall",
        "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/51/manual.html/pdf-xpcall\"])",
        "type": "variable"
    }
]